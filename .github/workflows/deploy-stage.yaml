name: Build App

on:
  push:
    branches: [stage]

  workflow_dispatch:
    inputs:
      comment:
        description: Comment on triggering this workflow
        required: false
env:
  REGISTRY_REPO: seventv/app
  REGISTRTY_IMAGE_NAME: seventv/app/stage:${{ github.sha }}

jobs:
  build:
    name: Build App (Stage)
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      
      - name: Set up NodeJS
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Install dependencies
        run: npm install

      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: npm-${{ hashFiles('package-lock.json') }}
          restore-keys: npm-
          submodules: true

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1 
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build Image with Server-Side Rendering & Push to Packages
        uses: docker/build-push-action@v2.5.0
        with:
          context: .
          file: Stage.Dockerfile
          push: true
          tags: |
            ghcr.io/seventv/app/stage:${{ github.sha }}
            ghcr.io/seventv/app/stage:latest

  deploy:
    name: Deploy (Staging Environment)
    runs-on: ubuntu-latest
    needs: # Run this after build
      - build

    steps:
        # Checkout repository
        - uses: actions/checkout@v2

        # Deploy to k8s
        - name: Install kubectl&
          uses: azure/setup-kubectl@v1

        - name: Apply Deployment & Rollout
          env:
            KUBE_CONFIG_DATA: ${{ secrets.K8S_CONFIG }}
            KUBE_RESOURCE: deployments
            KUBE_META_NAME: 7tv-webapp-stage
            KUBE_IMAGE_PATCH: >-
              [
                { "op": "replace", "path": "/spec/template/spec/containers/0/image", "value": "ghcr.io/${{ env.REGISTRTY_IMAGE_NAME }}" }
              ]
          run: |
            mkdir -p ~/.kube
            (echo $KUBE_CONFIG_DATA | base64 -d) >> ~/.kube/config
            kubectl config use-context 7tv-as-deployer

            kubectl apply -f k8s/stage.yaml
            kubectl patch $KUBE_RESOURCE $KUBE_META_NAME --type="json" -p="$KUBE_IMAGE_PATCH"

            kubectl rollout restart -n 7tv $KUBE_RESOURCE/$KUBE_META_NAME
